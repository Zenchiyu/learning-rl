# -*- coding: utf-8 -*-
"""
@author: Stephane Liem Nguyen

This file will try to replicate experiments from Sutton and Barto's book
for 10 armed testbed
"""


from environment.TenArmedTestBedEnv import *
import matplotlib.pyplot as plt

def eps_greedy(epsilon, Q):
    if np.random.uniform() < epsilon:
        # random action
        return np.random.choice(np.arange(Q.size))
    else:
        # greedy action
        return np.argmax(Q)
    
def single_run(epsilon, horizon):
    env = TenArmedTestBedEnv(horizon=horizon)
    
    # Estimated action values
    Q = np.zeros(env.action_space.shape)
    # Number of times action was taken
    N = np.zeros(env.action_space.shape)
    # Number of times optimal action was taken
    N_opt = 0
    opt_action = np.argmax(env.q_star)
    
    list_Q = []
    list_reward = []
    list_N_opt = []
    
    
    done = False
    while not done:
        action = eps_greedy(epsilon, Q)
        reward, done = env.step(action)
        
        # Increment count
        N[action] += 1
        if action == opt_action:
            N_opt += 1
        
        # Update estimate of action values
        Q[action] += 1/N[action]*(reward - Q[action])
        
        # Record Q[action], reward, N_opt, used for plotting
        list_Q += [Q[action]]
        list_reward += [reward]
        list_N_opt += [N_opt]
        
    env.reset()
    return env.q_star, list_Q, list_reward, list_N_opt
    
if __name__ == "__main__":
    np.random.seed(42)
    horizon = 1000
    n_runs = 2000
    
    # Greedy : epsilon = 0
    q_starsGreedy, QsGreedy, rewardsGreedy, N_optsGreedy = zip(*[single_run(epsilon=0, horizon=horizon) for _ in range(n_runs)])
    # Eps-Greedy : epsilon = 0.01
    q_stars0dot01, Qs0dot01, rewards0dot01, N_opts0dot01 = zip(*[single_run(epsilon=0.01, horizon=horizon) for _ in range(n_runs)])
    # Eps-Greedy : epsilon = 0.1
    q_stars0dot1, Qs0dot1, rewards0dot1, N_opts0dot1 = zip(*[single_run(epsilon=0.1, horizon=horizon) for _ in range(n_runs)])
    
    meanQsGreedy = np.mean(QsGreedy, axis=0)
    meanRewardsGreedy = np.mean(rewardsGreedy, axis=0)
    
    meanQs0dot01 = np.mean(Qs0dot01, axis=0)
    meanRewards0dot01 = np.mean(rewards0dot01, axis=0)
    
    meanQs0dot1 = np.mean(Qs0dot1, axis=0)
    meanRewards0dot1 = np.mean(rewards0dot1, axis=0)
    plt.figure(figsize=(20, 10))
    plt.plot(meanRewardsGreedy)
    plt.plot(meanRewards0dot01)
    plt.plot(meanRewards0dot1)